{
  "name": "upyun-legacy",
  "version": "0.4.0",
  "description": "official upyun sdk for node.js",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:lisposter/node-upyun-legacy.git"
  },
  "keywords": [
    "upyun",
    "sdk",
    "cdn",
    "cloudstorage"
  ],
  "author": {
    "name": "Leigh Zhu"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/lisposter/node-upyun-legacy/issues"
  },
  "homepage": "https://github.com/lisposter/node-upyun-legacy",
  "devDependencies": {
    "istanbul": "^0.3.2",
    "mocha": "~1.16.2",
    "should": "~4.0.4"
  },
  "readme": "# node-upyun-legacy\n[![NPM version](https://img.shields.io/npm/v/upyun-legacy.svg?style=flat)](https://www.npmjs.org/package/upyun-legacy)\n[![Build status](https://img.shields.io/travis/lisposter/node-upyun-legacy.svg?style=flat)](https://travis-ci.org/lisposter/node-upyun-legacy)\n[![Test coverage](https://img.shields.io/coveralls/lisposter/node-upyun-legacy.svg?style=flat)](https://coveralls.io/r/lisposter/node-upyun-legacy?branch=master)\n\nofficial upyun sdk for node.js (legacy)\n\n# Install\n\n```sh\n$ npm install upyun-legacy --save\n```\n\n# Example\n```js\nvar UPYUN = require('upyun');\n\nvar upyun = new UPYUN('testbucket', 'operatername', 'operaterpwd', 'v0');\n\nupyun.getUsage(function(err, result) {\n    //...\n})\n```\n\n# Response\nIn this SDK, every api will return a response in the format:\n\n#### Normal\n\n```js\n{\n    statusCode: 200,    // http stats code\n    headers: {\n        server: 'nginx/1.1.19',\n        date: 'Wed, 13 Aug 2014 02:15:27 GMT',\n        'content-type': 'application/json',\n        'content-length': '24',\n        connection: 'close'\n    },                  // response header\n    data: {\n        space: 2501\n    }                   // response body\n}\n```\n\n#### Error catch\nWhen an error occured, the error will be catched, and returned in the response\n\n```js\n{\n    statusCode: 401,    // http stats code\n    error: {\n        error_code: 401,\n        request_id: '9e7ce1bac4870ce5f066dd8775fda6b9',\n        message: '<h1>401 Unauthorized</h1>Sign error (sign = md5(METHOD&URI&DATE&CONTENT_LENGTH&MD5(PASSWORD)))'\n    },                  // error message\n    headers: {\n        server: 'nginx/1.1.19',\n        date: 'Wed, 13 Aug 2014 02:19:07 GMT',\n        'content-type': 'application/json',\n        'content-length': '145',\n        connection: 'close',\n        'www-authenticate': 'Basic realm=\"UpYun\"'\n    }                   // response header\n}\n```\n\nThe different between these two responses is the `error` and `body`.\n\nAll responses contain http status code and raw response header for futher usage.\n\n\n# Docs\n## API\n* [`getUsage`](#getUsage)\n* [`listDir`](#listDir)\n* [`createDir`](#createDir)\n* [`removeDir`](#removeDir)\n* [`uploadFile`](#uploadFile)\n* [`existsFile`](#existsFile)\n* [`downloadFile`](#downloadFile)\n* [`removeFile`](#removeFile)\n\n## Utils\n\n* [`setEndpoint`](#setEndpoint)\n\n\n# API\n\n<a name=\"getUsage\" />\n### getUsage(callback)\nTo get how many quota has been used.(Unit:`Byte`)\n\nresponse eg.\n\n```js\n{ statusCode: 200,\n  headers: { ... },\n  data: { space: '660612' } }\n```\n\n---------------------------------------\n\n<a name=\"listDir\" />\n### listDir(remotePath, callback)\nGet the file list of that dir. The response contains each item's type(file or dir), size(unit: `Byte`), last modify time.\n\n__Arguments__\n* `remotePath` The dir path which you want to traverse.\n\nresponse eg.\n\n```js\n{\n  \"statusCode\": 200,\n  \"headers\": { ... },\n  \"data\": {\n    \"location\": \"/\",\n    \"files\": [\n      {\n        \"name\": \"test_manual\",\n        \"type\": \"folder\",\n        \"length\": \"0\",\n        \"last_modified\": \"1411701197\"\n      },\n      {\n        \"name\": \"dir\",\n        \"type\": \"file\",\n        \"length\": \"0\",\n        \"last_modified\": \"1411546581\"\n      }\n    ]\n  }\n}\n```\n\n---------------------------------------\n\n<a name=\"createDir\" />\n### createDir(remotePath, callback)\nCreate a new dir in UPYUN bucket.\n\n__Arguments__\n* `remotePath` The dir path which you want to create.\n\n---------------------------------------\n\n<a name=\"removeDir\" />\n### removeDir(remotePath, callback)\nDelete a dir\n\n* `remotePath` The dir path which you want to remove.\n\n---------------------------------------\n\n<a name=\"uploadFile\" />\n### uploadFile(remotePath, localFile, type, [checksum], [opts], callback)\nUpload a file into UPYUN bucket.\n\n__Arguments__\n* `remotePath` Where the file will be stored in your UPYUN bucket.\n* `localFile` The file you want to upload. It can be a `path` string or the file's raw data.\n* `type` Specifies the file's content-type.\n* `checksum` Set `true` to force SDK send a md5 of local file to UPYUN. Or set a md5value string by yourself.\n* `opts` The additional http request headers(JavaScript Object). More detail in [Official Docs](http://docs.upyun.com/api/rest_api/#_4)\n\n```js\n {\n     statusCode: 200,\n     headers: { ... },\n     data: {\n         width: '400',\n         height: '200',\n         frames: '1',\n         type: 'PNG'\n     }\n }\n```\n\n---------------------------------------\n\n<a name=\"existsFile\" />\n### existsFile(remotePath, callback)\n`HEAD` a path to detect if there is an file.\n\n__Arguments__\n* `remotePath` The file's path in your UPYUN bucket.\n\n```js\n{\n    statusCode: 200,\n    headers: { ... },\n    data: {\n        type: 'file',\n        size: '1075',\n        date: '1407729976'\n    }\n}\n```\n\n---------------------------------------\n\n<a name=\"downloadFile\" />\n### downloadFile(remotePath, [localPath], callback)\nDownload a file from UPYUN bucket.\n\n__Arguments__\n* `remotePath` The file's path in your UPYUN bucket.\n* `localPath` Where the file will save to. If no `localPath`, the file's content will output directly in the response body.\n\n---------------------------------------\n\n<a name=\"removeFile\" />\n### removeFile(remotePath, callback)\nDelete a file from UPYUN bucket.\n\n__Arguments__\n* `remotePath` The file's path in your UPYUN bucket.\n\n# Utils\n\n<a name=\"setEndpoint\" />\n### setEndpoint(endpoint)\nUse this method to set api endpoint manually.\n\n__Arguments__\n* `endpoint` The value can be these(leave blank to let sdk auto select the best one):\n  * `ctcc` or `v1`: China Telecom\n  * `cucc` or `v2`: China Unicom\n  * `cmcc` or `v3` China Mobile\n  * `v0` or any other string: Will use `v0.api.upyun.com` (auto detect routing)\n\n",
  "readmeFilename": "README.md",
  "_id": "upyun-legacy@0.4.0",
  "dist": {
    "shasum": "9135c0648a622a077543f5884c9a19c3330235e2"
  },
  "_from": "upyun-legacy@",
  "_resolved": "https://registry.npmjs.org/upyun-legacy/-/upyun-legacy-0.4.0.tgz"
}
